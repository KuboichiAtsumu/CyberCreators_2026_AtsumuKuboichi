//==============================================================================================================================================
//
// ボスのHPに関する処理
// Author : Atsumu Kuboichi
//
//==============================================================================================================================================

//===========================================================================================================
// ヘッダーインクルード
//===========================================================================================================
#include "bosshp.h"
#include "boss.h"
#include "game.h"

//===========================================================================================================
// 静的メンバ変数初期化
//===========================================================================================================
int CBossHP::m_nAll = 0;//総数

//===========================================================================================================
// コンストラクタ
//===========================================================================================================
CBossHP::CBossHP() : CUI(),
	m_nIdx{ m_nAll }
{
	//総数加算
	m_nAll++;
}

//===========================================================================================================
// デストラクタ
//===========================================================================================================
CBossHP::~CBossHP()
{
	//総数減算
	m_nAll--;
}

//===========================================================================================================
// 初期化処理
//===========================================================================================================
HRESULT CBossHP::Init()
{
	//エディット可能フラグ
	SetEditFlag(false);

	//カラー設定
	SetColor({ 0.0f, 1.0f, 0.5f, 0.8f });

	//基底クラス初期化処理
	if (FAILED(CUI::Init()))
	{
		return E_FAIL;
	}

	//テクスチャを反映しない
	BindTexture(nullptr);

	return S_OK;
}

//===========================================================================================================
// 終了処理
//===========================================================================================================
void CBossHP::Uninit()
{
	//基底クラス終了処理
	CUI::Uninit();
}

//===========================================================================================================
// 更新処理
//===========================================================================================================
void CBossHP::Update()
{
	//ボスオブジェクト検索
	CObject* pObj = CObject::FindObject(Category::BOSS);

	//検索結果が不一致
	if (pObj == nullptr || pObj->GetCategory() != Category::BOSS) return;

	//ボスクラスにダウンキャスト
	CBoss* pBoss = DownCast<CBoss, CObject>(pObj);

	//ボスの現在のHPを取得
	int nBossHP = pBoss->GetHP();

	//HPと数を合わせる
	if (m_nIdx >= nBossHP)
	{
		//終了処理
		Uninit();
	}

	//現在のHPの割合に応じて色を変える
	float fRatioHP = static_cast<float>(nBossHP) / static_cast<float>(pBoss->GetMaxHP());
	
	//半分以下
	if (0.25f < fRatioHP && 
		fRatioHP <= 0.5f)
	{
		//カラー設定
		SetColor({ 1.0f, 1.0f, 0.0f, 1.0f });
	}
	// 1/4以下
	else if (fRatioHP <= 0.25f)
	{
		//カラー設定
		SetColor({ 1.0f, 0.0f, 0.0f, 1.0f });
	}

	//基底クラス更新処理
	CUI::Update();
}

//===========================================================================================================
// 描画処理
//===========================================================================================================
void CBossHP::Draw()
{
	//プレイヤーがボスエリアにいない
	if (CGame::GetInstance()->GetArea() != CGame::GAME_AREA::BOSS) return;

	//基底クラス描画処理
	CUI::Draw();
}
