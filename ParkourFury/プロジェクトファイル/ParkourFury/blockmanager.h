//==============================================================================================================================================
//
// ブロックマネージャーに関する処理のヘッダーファイル
// Author : Atsumu Kuboichi
//
//==============================================================================================================================================
#ifndef _BLOCKMANAGER_H_ //このマクロ定義がされなかったら
#define _BLOCKMANAGER_H_ //2重インクルード防止のマクロ定義

//===========================================================================================================
// ヘッダーインクルード
//===========================================================================================================
#include "objectmanager.h"
#include "block.h"

//===========================================================================================================
// クラス定義
//===========================================================================================================
class CBlockManager : public CObjectManager
{
public:
	//======================================
	// 関数
	//======================================
	CBlockManager();//コンストラクタ
	~CBlockManager() override;//デストラクタ
	HRESULT Init() override;//初期化処理
	void Uninit() override;//終了処理
	void UninitTypeAll(CBlock::TYPE type);//指定されたタイプのみの終了処理
	void Update() override;//更新処理
	void Draw() override;//描画処理
	void Regist(CBlock* pBlock);//登録処理
	void Load() override;//読込処理
	CBlock::CollisionFlag Collision(CBlock::CollisionParam& aParam);//当たり判定
	CBlock* FindBlock(CBlock::TYPE type);//ブロック検索処理

	//先頭オブジェクト
	CBlock* GetTop() { return m_pTop; }//取得

private:
	//======================================
	// 変数
	//======================================
	CBlock* m_pTop;//先頭オブジェクトのポインタ
	CBlock* m_pCur;//終端オブジェクトのポインタ
};

#endif
