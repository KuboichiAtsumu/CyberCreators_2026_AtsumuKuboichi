//==============================================================================================================================================
//
// ミニゲームエリア処理
// Author : Atsumu Kuboichi
//
//==============================================================================================================================================

//===========================================================================================================
// ヘッダーインクルード
//===========================================================================================================
#include "minigamearea.h"
#include "enemymanager.h"
#include "areamanager.h"
#include "minigame.h"
#include "game.h"
#include "game.h"

//===========================================================================================================
// コンストラクタ
//===========================================================================================================
CMiniGameArea::CMiniGameArea() : CArea()
{
}

//===========================================================================================================
// デストラクタ
//===========================================================================================================
CMiniGameArea::~CMiniGameArea()
{
}

//===========================================================================================================
// 初期化処理
//===========================================================================================================
HRESULT CMiniGameArea::Init()
{
	//基底クラス初期化処理
	if (FAILED(CArea::Init()))
	{
		return E_FAIL;
	}

	return S_OK;
}

//===========================================================================================================
// 終了処理
//===========================================================================================================
void CMiniGameArea::Uninit()
{
	//基底クラス終了処理
	CArea::Uninit();
}

//===========================================================================================================
// 解放処理
//===========================================================================================================
void CMiniGameArea::Release()
{
	//基底クラス解放処理
	CArea::Release();
}

//===========================================================================================================
// 更新処理
//===========================================================================================================
void CMiniGameArea::Update()
{
	//基底クラス更新処理
	CArea::Update();
}

//===========================================================================================================
// 当たり判定
//===========================================================================================================
bool CMiniGameArea::Collision(const D3DXVECTOR3& pos)
{
	//当たり判定フラグ
	bool bCollision = false;

	//当たり判定がtrueの場合
	if (CArea::Collision(pos))
	{
		//カメラの情報を取得
		CCamera* pCamera = CManager::GetInstance()->GetCamera();

		//現在の座標情報を取得
		D3DXVECTOR3 MiniGameAreaPos = GetPos();

		//カメラワーク情報設定
		pCamera->SetCameraWork({ MiniGameAreaPos.x, MiniGameAreaPos.y, MiniGameAreaPos.z + 1200.0f }, MiniGameAreaPos, 10);

		//当たり判定をtrueにする
		bCollision = true;
	}

	return bCollision;
}
