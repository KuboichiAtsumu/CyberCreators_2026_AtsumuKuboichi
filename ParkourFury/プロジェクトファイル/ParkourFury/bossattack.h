//==============================================================================================================================================
//
// ボス攻撃に関する処理のヘッダーファイル
// Author : Atsumu Kuboichi
//
//==============================================================================================================================================
#ifndef _BOSSATTACK_H_ //このマクロ定義がされなかったら
#define _BOSSATTACK_H_ //2重インクルード防止のマクロ定義

//===========================================================================================================
// ヘッダーインクルード
//===========================================================================================================
#include "objectX.h"

//===========================================================================================================
// クラス定義
//===========================================================================================================
class CBossAttack : public CObjectX
{
public:
	//======================================
	// 構造体定義
	//======================================

	//当たり判定用パラメータ
	struct CollisionParam
	{
		D3DXVECTOR3 pos;//座標
		D3DXVECTOR3 size;//サイズ
	};

	//======================================
	// 関数
	//======================================
	CBossAttack(int nPriority = static_cast<int>(Category::BOSS_ATTACK));//コンストラクタ
	~CBossAttack() override;//デストラクタ
	HRESULT Init() override;//初期化処理
	void Uninit() override;//終了処理
	void Release() override;//解放処理
	void Update() override;//更新処理
	void Draw() override;//描画処理
	static CBossAttack* Create(const D3DXVECTOR3& pos, const D3DXVECTOR3& TargetPos, const D3DXVECTOR3& rot, const D3DXVECTOR3& move);//生成処理
	bool Collision(CollisionParam& aParam);//当たり判定

private:
	//======================================
	// 関数
	//======================================
	void Move();//移動処理
	void Rotation();//回転処理
	bool Collision_X(CollisionParam& aParam);//X軸の当たり判定
	bool Collision_Y(CollisionParam& aParam);//Y軸の当たり判定
	bool Collision_Z(CollisionParam& aParam);//Z軸の当たり判定

	//======================================
	// 定数
	//======================================
	const float ROTATION_SPEED = 0.06f;//回転速度

	//======================================
	// 変数
	//======================================
	D3DXVECTOR3 m_TargetPos;//目標の座標
};

#endif
