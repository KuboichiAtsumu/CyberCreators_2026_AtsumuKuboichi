//==============================================================================================================================================
//
// ミニゲームに関する処理のヘッダーファイル
// Author : Atsumu Kuboichi
//
//==============================================================================================================================================
#ifndef _MINIGAME_H_ //このマクロ定義がされなかったら
#define _MINIGAME_H_ //2重インクルード防止のマクロ定義

//===========================================================================================================
// ヘッダーインクルード
//===========================================================================================================
#include "object.h"

//===========================================================================================================
// クラス定義
//===========================================================================================================
class CMiniGame : public CObject
{
public:
	//======================================
	// 関数
	//======================================
	CMiniGame(int nPriority = static_cast<int>(Category::EVENT));//コンストラクタ
	~CMiniGame() override;//デストラクタ
	HRESULT Init() override;//初期化処理
	void Uninit() override;//終了処理
	void Release() override;//解放処理
	void Update() override;//更新処理
	void Draw() override {}//描画処理
	static CMiniGame* Create();//生成処理
	static int GetMiniGameTimer() { return m_nTimer; }//タイマー取得処理

	//======================================
	// 定数
	//======================================
	const int TIMER = 30;//制限時間

private:
	//======================================
	// 関数
	//======================================
	void TimerCount();//タイマーカウント処理

	//======================================
	// 変数
	//======================================
	static int m_nTimer;//タイマー
	int m_nCntFrame;//フレームカウンタ
};

#endif