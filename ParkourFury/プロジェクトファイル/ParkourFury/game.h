//==============================================================================================================================================
//
// ゲーム画面に関する処理のヘッダーファイル
// Author : Atsumu Kuboichi
//
//==============================================================================================================================================
#ifndef _GAME_H_ //このマクロ定義がされなかったら
#define _GAME_H_ //2重インクルード防止のマクロ定義

//===========================================================================================================
// ヘッダーインクルード
//===========================================================================================================
#include "manager.h"

//===========================================================================================================
// 前方宣言
//===========================================================================================================
class CTimer;//タイマー

//===========================================================================================================
// クラス定義
//===========================================================================================================
class CGame : public CScene
{
public:
	//======================================
	// 列挙型定義
	//======================================

	//ゲームエリア
	enum class GAME_AREA
	{
		NORMAL = 0,//通常エリア
		BOSS,//ボスエリア
		MINI_GAME,//ミニゲームエリア
		CHASE,//チェイスエリア
		MAX
	};

	//======================================
	// 関数
	//======================================
	static CGame* GetInstance();//インスタンスの取得
	static void Release();//インスタンスの破棄
	HRESULT Init() override;//初期化処理
	void Uninit() override;//終了処理
	void Update() override;//更新処理
	void Draw() override;//描画処理
	static CGame* Create();//生成処理
	void AverageHeat();//平均ヒート量計算

	//インスタンス取得
	CTimer* GetTimer() { return m_pTimer; }//タイマー

	//現在のエリア
	void SetArea(GAME_AREA area) { m_Area = area; }//設定
	GAME_AREA GetArea() { return m_Area; }//取得

private:
	//======================================
	// 関数
	//======================================
	CGame();//コンストラクタ
	~CGame() override;//デストラクタ
	void SetFog();//フォグセット処理

	//======================================
	// 変数
	//======================================
	static CGame* m_pGame;//インスタンス
	std::vector<float> m_SecondlyHeat;//毎秒ごとのヒート量
	CTimer* m_pTimer;//タイマーのインスタンス
	GAME_AREA m_Area;//現在のエリア
};

#endif
