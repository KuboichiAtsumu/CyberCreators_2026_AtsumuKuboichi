#ifdef _DEBUG
//==============================================================================================================================================
//
// エディタオブジェクト管理
// Author : Atsumu Kuboichi
//
//==============================================================================================================================================

//===========================================================================================================
// ヘッダーインクルード
//===========================================================================================================
#include "editmanager.h"

//===========================================================================================================
// コンストラクタ
//===========================================================================================================
CEdit3DManager::CEdit3DManager() : CObjectManager()
{
	//メンバ変数初期化
	m_pTop = nullptr;//先頭アドレス
	m_pCur = nullptr;//終端アドレス
}

//===========================================================================================================
// デストラクタ
//===========================================================================================================
CEdit3DManager::~CEdit3DManager()
{
}

//===========================================================================================================
// 初期化処理
//===========================================================================================================
HRESULT CEdit3DManager::Init()
{
	//オブジェクトマネージャー初期化処理
	if (FAILED(CObjectManager::Init()))
	{
		return E_FAIL;
	}

	return S_OK;
}

//===========================================================================================================
// 終了処理
//===========================================================================================================
void CEdit3DManager::Uninit()
{
	//オブジェクトマネージャー終了処理
	CObjectManager::Uninit();
}

//===========================================================================================================
// 更新処理
//===========================================================================================================
void CEdit3DManager::Update()
{
	//先頭アドレスを取得する
	CEdit3D* pEdit = m_pTop;

	//オブジェクト情報がnullptrになるまで繰り返す
	while (pEdit != nullptr)
	{
		//次のオブジェクト情報を取得
		CEdit3D* pNext = pEdit->GetNextEdit();

		//ブロック情報が存在する場合
		//削除フラグがtrueの場合
		if (pEdit != nullptr && pEdit->GetDeleteFlag())
		{
			//前のオブジェクト情報を取得
			CEdit3D* pPrev = pEdit->GetPrevEdit();

			//前のオブジェクト情報が存在する場合
			if (pPrev != nullptr)
			{
				//次のオブジェクト情報を繋ぐ
				pPrev->SetNextEdit(pNext);
			}
			//前のオブジェクト情報が存在しない場合
			else
			{
				//次ののオブジェクト情報の前のオブジェクト情報をnullptrに設定
				pNext->SetPrevEdit(nullptr);

				//先頭アドレスを変更
				m_pTop = pNext;
			}

			//次のオブジェクト情報が存在する場合
			if (pNext != nullptr)
			{
				//前のオブジェクト情報を繋ぐ
				pNext->SetPrevEdit(pPrev);

				//インデックスを詰める
				pNext->SetIdx(pEdit->GetIdx());
			}
			//次のオブジェクト情報が存在しない場合
			else
			{
				//前のオブジェクト情報の次のオブジェクト情報をnullptrに設定
				pPrev->SetNextEdit(nullptr);

				//終端アドレスを変更
				m_pCur = pPrev;
			}
		}

		//オブジェクト情報を次の情報に変更する
		pEdit = pNext;
	}
}

//===========================================================================================================
// 描画処理
//===========================================================================================================
void CEdit3DManager::Draw()
{
}

//===========================================================================================================
// 登録処理
//===========================================================================================================
void CEdit3DManager::Regist(CEdit3D* pEdit)
{
	//先頭アドレスが存在しない場合
	if (m_pTop == nullptr)
	{
		//生成したブロック情報を先頭アドレスに代入
		m_pTop = pEdit;

		//前のオブジェクト情報にnullptrを代入
		pEdit->SetPrevEdit(nullptr);
	}

	//先頭アドレスが存在する場合
	else
	{
		//先頭アドレスを取得
		CEdit3D* pAllEdit = m_pTop;

		//オブジェクト情報がnullptrになるまで繰り返す
		while (pAllEdit != nullptr)
		{
			//次のオブジェクト情報が存在しない場合
			if (pAllEdit->GetNextEdit() == nullptr)
			{
				//次のオブジェクト情報に生成したブロック情報を保存
				pAllEdit->SetNextEdit(pEdit);

				//生成したブロック情報の前のオブジェクト情報を保存
				pEdit->SetPrevEdit(pAllEdit);
				break;
			}

			//オブジェクト情報を次の情報に変更する
			pAllEdit = pAllEdit->GetNextEdit();
		}
	}

	//自身の次のオブジェクト情報にnullptrを代入
	pEdit->SetNextEdit(nullptr);

	//終端アドレスを代入
	m_pCur = pEdit;
}

//===========================================================================================================
// 読込処理
//===========================================================================================================
void CEdit3DManager::Load()
{
	//ローカル変数宣言
	D3DXVECTOR3 pos = { 0.0f, 0.0f, 0.0f };//座標情報保存用
	D3DXVECTOR3 rot = { 0.0f, 0.0f, 0.0f };//角度情報保存用
	D3DXVECTOR3 scale = { 0.0f, 0.0f, 0.0f };//拡大率情報保存用
	int nTag = 1;//タグ情報保存用
	int nType = 0;//タイプ情報保存用
	int nNumAll = 0;//総数

	//ファイルを開く
	FILE* pFile = fopen(CManager::GetInstance()->StageFile[static_cast<int>(CManager::GetInstance()->GetScene()->GetMode())], "rb");

	//オブジェクトデータの読み込み
	if (pFile != nullptr)
	{
		//ファイルの読み込み
		fread(&nNumAll, sizeof(int), 1, pFile);

		for (int nCnt = 0; nCnt < nNumAll; nCnt++)
		{
			//データの取得
			fread(&pos, sizeof(D3DXVECTOR3), 1, pFile);//座標
			fread(&rot, sizeof(D3DXVECTOR3), 1, pFile);//角度
			fread(&scale, sizeof(D3DXVECTOR3), 1, pFile);//拡大率
			fread(&nTag, sizeof(int), 1, pFile);//タグ
			fread(&nType, sizeof(int), 1, pFile);//種類

			//エディタオブジェクト情報設定
			CEdit3D aEdit = { static_cast<int>(Category::EDIT) };
			aEdit.SetPos(pos);//座標
			aEdit.SetRot(rot);//角度
			aEdit.SetScale(scale);//拡大率
			aEdit.SetTag(static_cast<CTag::TAG>(nTag));//タグ
			aEdit.SetType(nType);//タイプ

			//生成処理
			CEdit3D::Create(aEdit);
		}

		//ファイルを閉じる
		fclose(pFile);
	}

	//オブジェクトデータが1つも存在しない場合
	if (nNumAll == 0)
	{
		//エディタオブジェクト情報設定
		CEdit3D aEdit = { static_cast<int>(Category::EDIT) };
		aEdit.SetPos({ 0.0f, 0.0f, 0.0f });//座標初期情報設定
		aEdit.SetRot({ 0.0f, 0.0f, 0.0f });//角度初期情報設定
		aEdit.SetScale({ 1.0f, 1.0f, 1.0f });//拡大率初期情報設定
		aEdit.SetTag(static_cast<CTag::TAG>(nTag));//タグ
		aEdit.SetType(1);//タイプ

		//オブジェクトを1つ生成
		CEdit3D::Create(aEdit);
	}
}

//===========================================================================================================
// インデックス検索処理
//===========================================================================================================
CEdit3D* CEdit3DManager::Find(int nIdx)
{
	//先頭の情報を取得
	CEdit3D* pEdit = m_pTop;

	//次の情報がnullptrになるまで繰り返す
	while (pEdit != nullptr)
	{
		//インデックスが一致した場合
		if (pEdit->GetIdx() == nIdx)
		{
			//ポインタを返す
			return pEdit;
		}

		//次の情報を取得
		pEdit = pEdit->GetNextEdit();
	}

	return nullptr;
}
#endif // _DEBUG