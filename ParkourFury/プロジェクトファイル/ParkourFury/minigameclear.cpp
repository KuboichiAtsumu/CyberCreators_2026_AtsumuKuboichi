//==============================================================================================================================================
//
// ミニゲームクリア演出に関する処理
// Author : Atsumu Kuboichi
//
//==============================================================================================================================================

//===========================================================================================================
// ヘッダーインクルード
//===========================================================================================================
#include "minigameclear.h"

//===========================================================================================================
// コンストラクタ
//===========================================================================================================
CMiniGameClear::CMiniGameClear(int nPriority) : CBillboardEffect(nPriority),
	m_pTargetObj(nullptr),
	m_DiffDistance( 0.0f, 0.0f, 0.0f ),
	m_nDisPlayTime(MAX_FRAME * DISPLAY_TIME)
{
}

//===========================================================================================================
// デストラクタ
//===========================================================================================================
CMiniGameClear::~CMiniGameClear()
{
}

//===========================================================================================================
// 初期化処理
//===========================================================================================================
HRESULT CMiniGameClear::Init()
{
	//基底クラス初期化処理
	if (FAILED(CBillboardEffect::Init()))
	{
		return E_FAIL;
	}

	return S_OK;
}

//===========================================================================================================
// 終了処理
//===========================================================================================================
void CMiniGameClear::Uninit()
{
	//基底クラス終了処理
	CBillboardEffect::Uninit();
}

//===========================================================================================================
// 解放処理
//===========================================================================================================
void CMiniGameClear::Release()
{
	//対象オブジェクトをnullptrにする
	m_pTargetObj = nullptr;

	//基底クラス解放処理
	CBillboardEffect::Release();
}

//===========================================================================================================
// 更新処理
//===========================================================================================================
void CMiniGameClear::Update()
{
	//座標調節
	OffSetPos();

	//表示時間減少
	DecDisPlayTime();

	//基底クラス更新処理
	CBillboardEffect::Update();
}

//===========================================================================================================
// 描画処理
//===========================================================================================================
void CMiniGameClear::Draw()
{
	//基底クラス描画処理
	CBillboardEffect::Draw();
}

//===========================================================================================================
// 生成処理
//===========================================================================================================
CMiniGameClear* CMiniGameClear::Create(const D3DXVECTOR3& pos, CObject3D* pObj)
{
	//メモリを動的確保
	CBillboardEffect* pBillboardEffect = CBillboardEffect::Create(CBillboardEffect::TYPE::MINIGAME_CLEAR, pos, SIZE);

	//ダウンキャスト
	CMiniGameClear* pMiniGameClear = CObject::DownCast<CMiniGameClear, CBillboardEffect>(pBillboardEffect);

	//ターゲット情報が存在する場合
	if (pMiniGameClear != nullptr)
	{
		//パラメータ設定
		pMiniGameClear->m_pTargetObj = pObj;//対象オブジェクトのポインタ
		pMiniGameClear->m_DiffDistance = pos - pObj->GetPos();//対象オブジェクトとの距離

		//初期化処理
		pMiniGameClear->Init();
	}

	return pMiniGameClear;
}

//===========================================================================================================
// 座標調節
//===========================================================================================================
void CMiniGameClear::OffSetPos()
{
	//座標取得
	D3DXVECTOR3 pos = GetPos();

	//常に対象オブジェクトとの距離が一定になるように調整
	pos = m_pTargetObj->GetPos() + m_DiffDistance;

	//座標設定
	SetPos(pos);
}

//===========================================================================================================
// 表示時間減少
//===========================================================================================================
void CMiniGameClear::DecDisPlayTime()
{
	//表示時間減少
	m_nDisPlayTime--;

	//表示時間が0
	if (m_nDisPlayTime <= 0)
	{
		//終了処理
		Uninit();
	}
}
