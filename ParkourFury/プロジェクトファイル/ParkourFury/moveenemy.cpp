//==============================================================================================================================================
//
// ムーブエネミーに関する処理
// Author : Atsumu Kuboichi
//
//==============================================================================================================================================

//===========================================================================================================
// ヘッダーインクルード
//===========================================================================================================
#include "moveenemy.h"

//===========================================================================================================
// コンストラクタ
//===========================================================================================================
CMoveEnemy::CMoveEnemy() :
	CEnemy(),
	m_FirstPos{ 0.0f, 0.0f, 0.0f }
{
}

//===========================================================================================================
// デストラクタ
//===========================================================================================================
CMoveEnemy::~CMoveEnemy()
{
}

//===========================================================================================================
// 初期化処理
//===========================================================================================================
HRESULT CMoveEnemy::Init()
{
	//初期位置保存
	m_FirstPos = GetPos();

	//移動量設定
	SetMove(MOVE);

	//基底クラス初期化処理
	if (FAILED(CEnemy::Init()))
	{
		return E_FAIL;
	}

	return S_OK;
}

//===========================================================================================================
// 終了処理
//===========================================================================================================
void CMoveEnemy::Uninit()
{
	//基底クラス終了処理
	CEnemy::Uninit();
}

//===========================================================================================================
// 解放処理
//===========================================================================================================
void CMoveEnemy::Release()
{
	//基底クラス解放処理
	CEnemy::Release();
}

//===========================================================================================================
// 更新処理
//===========================================================================================================
void CMoveEnemy::Update()
{
	//情報を取得
	D3DXVECTOR3 Pos = GetPos();//位置
	D3DXVECTOR3 Move = GetMove();//移動量

	//移動量を加算
	Pos += Move;

	//敵の位置が移動幅を超えた場合
	if (Pos.y >= m_FirstPos.y + MOVE_RANGE || Pos.y <= m_FirstPos.y - MOVE_RANGE)
	{
		//移動方向を切り替える
		Move *= -1.0f;
	}

	//情報を設定
	SetPos(Pos);//位置
	SetMove(Move);//移動量

	//基底クラス更新処理
	CEnemy::Update();
}

//===========================================================================================================
// 描画処理
//===========================================================================================================
void CMoveEnemy::Draw()
{
	//エディタモードの場合
	if (CManager::GetInstance()->GetScene()->GetSceneState() == CScene::SCENE::EDIT_3D)
	{//描画せずに処理を抜ける
		return;
	}

	//基底クラス描画処理
	CEnemy::Draw();
}

//===========================================================================================================
// 当たり判定
//===========================================================================================================
bool CMoveEnemy::Collision(CollisionParam& aParam)
{
	//当たり判定フラグ
	bool bCollision = false;

	//基底クラス当たり判定
	bCollision = CEnemy::Collision(aParam);

	return bCollision;
}
